# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.8'

services:
  springboot-app:
    build:
      context: springboot-app
      dockerfile: Dockerfile
    mem_limit: 512m
    mem_reservation: 512M
    networks:
      - demo
    secrets:
      - source: appuser_password
      - source: truststore_password
    ports:
      - "8080:8080"
      - "8081:8081"
    restart: always
    depends_on:
      - mysql
    environment:
      SPRING_PROFILES_ACTIVE: docker
      JAVA_TOOL_OPTIONS: "-XX:InitialRAMPercentage=70 -XX:MaxRAMPercentage=70 -Dfile.encoding=UTF-8"

  mysql:
    image: mysql:8.0.25
    user: mysql
    command:
      - "mysqld"
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
      - "--bind-address=0.0.0.0"
      - "--ssl-ca=/run/secrets/ca.pem"
      - "--ssl-cert=/run/secrets/server-cert.pem"
      - "--ssl-key=/run/secrets/server-key.pem"
      - "--default_authentication_plugin=mysql_native_password"
    networks:
      - demo
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: demoapp
      MYSQL_USER: appuser
      MYSQL_PASSWORD_FILE: /run/secrets/appuser_password
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/root_password
    volumes:
      - ./src/test/resources/data_mysql.sql:/docker-entrypoint-initdb.d/data_mysql.sql
    secrets:
      - source: root_password
      - source: appuser_password
      - source: mysql_root_ca
        target: ca.pem
        uid: '999'
        gid: '999'
        mode: 0440
      - source: server_key
        target: server-key.pem
        uid: '999'
        gid: '999'
        mode: 0440
      - source: server_cert
        target: server-cert.pem
        uid: '999'
        gid: '999'
        mode: 0440

secrets:
  root_password:
    file: ./credentials/root_password
  appuser_password:
    file: ./credentials/appuser_password
  truststore_password:
    file: ./credentials/jdbc_truststore_password
  mysql_root_ca:
    file: ./credentials/ca.pem
  server_key:
    file: ./credentials/server-key.pem
  server_cert:
    file: ./credentials/server-cert.pem
networks:
  demo: