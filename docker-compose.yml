# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)
services:
  springboot-app:
    container_name: springboot-app
    build:
      context: springboot-app
      dockerfile: Dockerfile
    mem_reservation: 512M
    healthcheck:
      test: "curl --fail --silent http://localhost:8081/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 2s
      retries: 10
    secrets:
      - appuser_password
      - jdbc_truststore_password
      - jdbc_truststore_path
      - source: root_ca
        target: ca.crt
        mode: 0600
      - source: server_cert
        target: server.crt
        mode: 0600
    ports:
      - "8080:8080"
      - "8081:8081"
    networks:
      - demo
    links:
      - postgres
    restart: always
    depends_on:
      - postgres
      - flyway
    environment:
      JDBC_TRUSTSTORE_PATH: /run/secrets/jdbc_truststore_path
      AWS_REGION: us-east-1
      SPRING_PROFILES_ACTIVE: docker
      JAVA_TOOL_OPTIONS: "-XX:InitialRAMPercentage=70 -XX:MaxRAMPercentage=70 -Dfile.encoding=UTF-8"

  flyway:
    container_name: flyway
    #    stdin_open: true
    #    tty: true
    build:
      context: flyway-container
      dockerfile: Dockerfile
    mem_reservation: 512M
    secrets:
      - root_password
      - appuser_password
      - jdbc_truststore_password
      - jdbc_truststore_path
      - source: root_ca
        target: ca.crt
        mode: 0600
      - source: server_cert
        target: server.crt
        mode: 0600
    networks:
      - demo
    links:
      - postgres
    restart: on-failure
    depends_on:
      - postgres
    environment:
      FLYWAY_URL: "jdbc:postgresql://postgres:5432/postgres?ssl=true&sslmode=verify-ca&sslcert=/run/secrets/server.crt&sslrootcert=/run/secrets/ca.crt"
      FLYWAY_BASELINE_ON_MIGRATE: true
      FLYWAY_MIXED: true
      JDBC_TRUSTSTORE_PATH: /run/secrets/jdbc_truststore_path
      AWS_REGION: us-east-1
      FLYWAY_USER: postgres
      FLYWAY_PASSWORD: /run/secrets/root_password
      FLYWAY_PLACEHOLDERS_APPUSER_USERNAME: appuser
      FLYWAY_PLACEHOLDERS_APPUSERPW: /run/secrets/appuser_password
      JAVA_TOOL_OPTIONS: "-XX:InitialRAMPercentage=70 -XX:MaxRAMPercentage=70 -Dfile.encoding=UTF-8"
    volumes:
      - ./flyway-migrate.sh:/flyway-migrate.sh
      - ./data-migration/sql:/sql
    entrypoint:
      - /flyway-migrate.sh

  postgres:
    container_name: postgres
    image: postgres:16
    user: postgres
    command:
      - "-c"
      - "ssl=on"
      - "-c"
      - "ssl_cert_file=/run/secrets/server.crt"
      - "-c"
      - "ssl_key_file=/run/secrets/server.key"
      - "-c"
      - "ssl_ca_file=/run/secrets/ca.crt"
    networks:
      - demo
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/root_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./.database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    secrets:
      - source: root_password
      - source: appuser_password
      - source: root_ca
        target: ca.crt
        mode: 0600
      - source: server_key
        target: server.key
        mode: 0600
      - source: server_cert
        target: server.crt
        mode: 0600
  envoy:
    build:
      context: envoy
      dockerfile: Dockerfile
    networks:
      - demo
    links:
      - springboot-app
    restart: on-failure
    depends_on:
      - springboot-app
    ports:
      - "8585:8585"
secrets:
  root_password:
    file: ./credentials/root_password
  appuser_password:
    file: ./credentials/appuser_password
  jdbc_truststore_password:
    file: ./credentials/jdbc_truststore_password
  jdbc_truststore_path:
    file: ./credentials/jdbc_truststore_local.p12
  root_ca:
    file: ./credentials/ca.crt
  server_key_der:
    file: ./credentials/server.key.der
  server_key:
    file: ./credentials/server.key
  server_cert:
    file: ./credentials/server.crt
networks:
  demo:
