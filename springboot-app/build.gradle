plugins {
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id 'maven-publish'
}

group = 'com.example'
version = '1.0.0'

compileJava   {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


repositories {
    mavenCentral()
}

configurations {
    // exclude Tomcat because we want Undertow
    implementation.exclude module: 'spring-boot-starter-tomcat'
    // excluding the default logback provider
    //implementation.exclude module: 'spring-boot-starter-logging'
}

dependencies {
    //implementation platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
    implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:3.0.1")
    implementation('io.awspring.cloud:spring-cloud-aws-autoconfigure')
    implementation('io.awspring.cloud:spring-cloud-aws-parameter-store')
    implementation('io.awspring.cloud:spring-cloud-aws-secrets-manager')
	implementation('org.springframework.boot:spring-boot-starter-undertow')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-jdbc')
	implementation('org.springframework.boot:spring-boot-starter-jersey')
    implementation('org.apache.logging.log4j:log4j-web')
    implementation('com.zaxxer:HikariCP')
    implementation('org.postgresql:postgresql')
    // https://docs.awspring.io/spring-cloud-aws/docs/3.0.0-SNAPSHOT/reference/html/index.html#cloudwatch-metrics
    runtimeOnly('io.micrometer:micrometer-registry-cloudwatch2')
    testImplementation('com.h2database:h2')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}



springBoot {
    buildInfo()
}

test {
    useJUnitPlatform()
    // The AWS v1 SDK will fail if the region is not set, so we configure it via system property. The unit tests
    // do not call any AWS resources, this is simply a means to ensure that the tests don't fail on resolving the
    // region in the AwsRegionProviderChain.java.
    systemProperty("aws.region","us-east-1")
    testLogging {
        events "failed"
        debug {
            events "started", "skipped", "failed"
            exceptionFormat "full"
        }
        info.events = ["failed", "skipped"]
    }
}

tasks.jar.enabled = true


